10. When you use the redirect output symbol (>) on a command line, the shell
creates the output file immediately, before the command is executed.
Demonstrate that this is true.Advanced Exercises 161
11. In experimenting with variables, Max accidentally deletes his PATH variable.
He decides he does not need the PATH variable. Discuss some of the problems
he could soon encounter and explain the reasons for these problems. How
could he easily return PATH to its original value?
12. Assume permissions on a file allow you to write to the file but not to delete it.
a. Give a command to empty the file without invoking an editor.
b. Explain how you might have permission to modify a file that you cannot
delete.
13. If you accidentally create a filename that contains a nonprinting character,
such as a CONTROL character, how can you remove the file?
14. Why does the noclobber variable not protect you from overwriting an
existing file with cp or mv ?
15. Why do command names and filenames usually not have embedded SPACE s?
How would you create a filename containing a SPACE ? How would you
remove it? (This is a thought exercise, not recommended practice. If you
want to experiment, create a file and work in a directory that contains only
your experimental file.)
16. Create a file named answer and give the following command:
$ > answers.0102 < answer cat
Explain what the command does and why. What is a more conventional
way of expressing this command?

10. ? > c
11. Max will be unable to use the utility in the $PATH variable, a easy way to fix that is to log out and log in
12. cat /dev/null > file
13. with its inode number or with wildcard characters
14. ?
15. because space is usually used to separate each files, we can create one with \ like lol\ haha and to delete it we can do rm lol*
16. 